2017-10-23 00:30:28 INFO  ProductManager:FilterByPriceRange:33 - Begin filter products with lowerBound = 99 and upperBound =  141
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:30:28 WARN  ProductManager:FilterByPriceRange:42 - Filter finished work! Success!
2017-10-23 00:31:04 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:31:04 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:31:04 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:04 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:04 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:31:04 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:31:04 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:31:33 INFO  ProductManager:FilterByPriceRange:33 - Begin filter products with lowerBound = 99 and upperBound =  141
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:31:33 WARN  ProductManager:FilterByPriceRange:42 - Filter finished work! Success!
2017-10-23 00:34:11 INFO  ProductManager:FilterByPriceRange:33 - Begin filter products with lowerBound = 99 and upperBound =  141
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:11 WARN  ProductManager:FilterByPriceRange:42 - Filter finished work! Success!
2017-10-23 00:34:38 INFO  ProductManager:FilterByPriceRange:33 - Begin filter products with lowerBound = 99 and upperBound =  141
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:38 WARN  ProductManager:FilterByPriceRange:42 - Filter finished work! Success!
2017-10-23 00:34:42 INFO  ProductManager:FilterByPriceRange:33 - Begin filter products with lowerBound = 99 and upperBound =  141
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:42 WARN  ProductManager:FilterByPriceRange:42 - Filter finished work! Success!
2017-10-23 00:34:47 INFO  ProductManager:FilterByPriceRange:33 - Begin filter products with lowerBound = 99 and upperBound =  141
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:47 WARN  ProductManager:FilterByPriceRange:42 - Filter finished work! Success!
2017-10-23 00:34:48 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:48 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:48 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:48 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:48 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:48 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:48 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:48 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:48 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:48 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:48 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:48 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:48 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:48 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:48 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:48 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:48 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:48 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:48 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:48 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:48 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:48 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:48 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:49 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:49 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:49 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:49 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:49 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:49 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:49 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:49 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:49 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:49 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:49 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:49 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:49 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:49 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:49 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:49 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:49 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:49 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:49 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:49 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:49 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:49 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:49 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:49 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:50 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:50 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:50 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:50 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:50 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:50 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:50 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:50 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:51 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:51 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:51 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:51 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:51 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:51 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:51 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:51 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:51 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:51 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:51 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:51 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:51 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:51 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:51 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:51 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:51 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:51 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:51 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:51 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:51 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:52 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:52 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:52 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:52 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:52 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:52 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:52 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:52 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:52 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:52 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:52 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:52 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:52 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:52 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:52 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:34:52 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:53 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 1 to list of IQP 
2017-10-23 00:34:53 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:53 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:53 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:53 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:53 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 2
2017-10-23 00:34:53 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:53 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 1 to list of IQP 
2017-10-23 00:34:53 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:53 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:53 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:53 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:53 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:53 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 2
2017-10-23 00:34:53 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:54 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 1 to list of IQP 
2017-10-23 00:34:54 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:54 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:54 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:54 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:54 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:54 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 2
2017-10-23 00:34:54 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:34:58 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:34:58 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:34:58 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:58 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:34:58 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:34:58 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:34:58 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 2
2017-10-23 00:34:58 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:35:17 INFO  ProductManager:FilterByPriceRange:33 - Begin filter products with lowerBound = 99 and upperBound =  141
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:17 WARN  ProductManager:FilterByPriceRange:42 - Filter finished work! Success!
2017-10-23 00:35:19 INFO  ProductManager:FilterByPriceRange:33 - Begin filter products with lowerBound = 99 and upperBound =  141
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:19 WARN  ProductManager:FilterByPriceRange:42 - Filter finished work! Success!
2017-10-23 00:35:48 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:50 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:35:50 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:35:50 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:50 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:50 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:35:50 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 1
2017-10-23 00:35:50 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:35:50 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 1 to list of IQP 
2017-10-23 00:35:50 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:35:50 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:50 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:50 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:35:50 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 2
2017-10-23 00:35:50 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:35:51 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:35:51 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:35:51 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:51 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:51 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:35:51 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:35:51 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 2
2017-10-23 00:35:51 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:35:52 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 1 to list of IQP 
2017-10-23 00:35:52 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:35:52 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:52 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:52 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:35:52 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:35:52 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 2
2017-10-23 00:35:52 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:35:52 INFO  OrderBean:addListOfItemQuantityPrice:35 - Adding product with ID = 0 to list of IQP 
2017-10-23 00:35:52 INFO  OrderBean:addListOfItemQuantityPrice:38 - Creating IQO object and set params to him 
2017-10-23 00:35:52 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:52 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:35:52 INFO  OrderBean:addListOfItemQuantityPrice:43 - Creating IQO object and set params to him ->Success! 
2017-10-23 00:35:52 INFO  OrderBean:sumOfProduct:63 - calculating the current sum of item in cart
2017-10-23 00:35:52 INFO  OrderBean:addListOfItemQuantityPrice:58 - Product was added to the cart. Current cart size = 2
2017-10-23 00:35:52 INFO  OrderBean:sumOfCard:69 - calculating the current sum of cart
2017-10-23 00:35:53 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:36:16 INFO  OrderBean:getCommentsList:37 - Getting all comments and converting into JSON
2017-10-23 00:36:16 INFO  DataBase:getCommentsList:36 - getting comment list (DAO)!
2017-10-23 00:36:16 INFO  HibernateUtil:<clinit>:18 - Init Hibernate
2017-10-23 00:36:16 DEBUG logging:messageLogger:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-10-23 00:36:16 DEBUG IntegratorServiceImpl:addIntegrator:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-10-23 00:36:16 DEBUG IntegratorServiceImpl:addIntegrator:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-10-23 00:36:16 DEBUG IntegratorServiceImpl:addIntegrator:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-10-23 00:36:16 INFO  Version:logVersion:45 - HHH000412: Hibernate Core {5.2.10.Final}
2017-10-23 00:36:16 INFO  Environment:<clinit>:213 - HHH000206: hibernate.properties not found
2017-10-23 00:36:16 DEBUG LocalXmlResourceResolver:resolveEntity:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2017-10-23 00:36:16 DEBUG JaxbCfgProcessor:unmarshal:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-10-23 00:36:16 DEBUG Configuration:buildSessionFactory:724 - Building session factory using internal StandardServiceRegistryBuilder
2017-10-23 00:36:16 DEBUG ServiceBinding:setService:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-10-23 00:36:16 DEBUG Configuration:buildSessionFactory:652 - Building session factory using provided StandardServiceRegistry
2017-10-23 00:36:16 DEBUG RegionFactoryInitiator:initiateService:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-10-23 00:36:16 INFO  Version:<clinit>:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@759accb1
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@759accb1
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@759accb1
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@ae62fc9
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c392f8e
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3c7ef457
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration byte -> org.hibernate.type.ByteType@5211a536
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration byte -> org.hibernate.type.ByteType@5211a536
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5211a536
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration character -> org.hibernate.type.CharacterType@4cfb1cc0
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration char -> org.hibernate.type.CharacterType@4cfb1cc0
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4cfb1cc0
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration short -> org.hibernate.type.ShortType@45fcc619
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration short -> org.hibernate.type.ShortType@45fcc619
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@45fcc619
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration integer -> org.hibernate.type.IntegerType@68366d5b
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration int -> org.hibernate.type.IntegerType@68366d5b
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@68366d5b
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration long -> org.hibernate.type.LongType@3f90780
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration long -> org.hibernate.type.LongType@3f90780
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3f90780
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration float -> org.hibernate.type.FloatType@63c99c1b
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration float -> org.hibernate.type.FloatType@63c99c1b
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@63c99c1b
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration double -> org.hibernate.type.DoubleType@468768d1
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration double -> org.hibernate.type.DoubleType@468768d1
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@468768d1
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3c465d99
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3c465d99
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@453b5942
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@453b5942
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration string -> org.hibernate.type.StringType@18c78ba
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@18c78ba
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3eb264e0
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3696270c
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration url -> org.hibernate.type.UrlType@297cfd97
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@297cfd97
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration Duration -> org.hibernate.type.DurationType@75e97606
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@75e97606
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration Instant -> org.hibernate.type.InstantType@41bd9d09
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@41bd9d09
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@46c0a2cd
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@46c0a2cd
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2791e568
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2791e568
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7222c5fd
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7222c5fd
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3757bf5b
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3757bf5b
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@372a8046
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@372a8046
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@594c70d2
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@594c70d2
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration date -> org.hibernate.type.DateType@8502c6c
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@8502c6c
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration time -> org.hibernate.type.TimeType@289b8f12
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@289b8f12
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7106c864
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7106c864
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7106c864
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f5dc1ff
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@4d2a4b69
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4d2a4b69
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4d2a4b69
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3f60db75
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration locale -> org.hibernate.type.LocaleType@7efa8883
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7efa8883
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@6f6ff74d
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f6ff74d
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@765b9d26
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@765b9d26
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration class -> org.hibernate.type.ClassType@4ef6b1bd
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ef6b1bd
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3c051c02
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3c051c02
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@243e82aa
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration binary -> org.hibernate.type.BinaryType@185e6855
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@185e6855
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration [B -> org.hibernate.type.BinaryType@185e6855
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@28bf28b
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@28bf28b
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@28bf28b
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@6961f416
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration image -> org.hibernate.type.ImageType@1880ee6c
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@174c8df7
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@174c8df7
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@174c8df7
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@158393ac
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@158393ac
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@158393ac
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration text -> org.hibernate.type.TextType@5bac31ce
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration ntext -> org.hibernate.type.NTextType@7e22de18
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration blob -> org.hibernate.type.BlobType@39bda30d
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@39bda30d
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7139d679
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration clob -> org.hibernate.type.ClobType@54e7c77d
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@54e7c77d
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration nclob -> org.hibernate.type.NClobType@607d14a2
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@607d14a2
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1012a529
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5073ecf4
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@63ec5e0b
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration object -> org.hibernate.type.ObjectType@18f960d8
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@18f960d8
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@703df3d0
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2311a2af
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3cff8a6d
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1f03f43f
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3f377c
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e15e90e
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6ef9a243
2017-10-23 00:36:16 DEBUG BasicTypeRegistry:register:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6edb01af
2017-10-23 00:36:16 WARN  pooling:configure:70 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-10-23 00:36:16 INFO  pooling:buildCreator:126 - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/db]
2017-10-23 00:36:16 INFO  pooling:buildCreator:132 - HHH10001001: Connection properties: {user=root, password=12345}
2017-10-23 00:36:16 INFO  pooling:buildCreator:140 - HHH10001003: Autocommit mode: false
2017-10-23 00:36:16 DEBUG DriverManagerConnectionProviderImpl:debugf:384 - Initializing Connection pool with 1 Connections
2017-10-23 00:36:16 INFO  DriverManagerConnectionProviderImpl:<init>:41 - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-10-23 00:36:17 DEBUG JdbcEnvironmentInitiator:initiateService:72 - Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2017-10-23 00:36:17 DEBUG JdbcEnvironmentInitiator:initiateService:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-8.0.7-dmr ( Revision: d33a3ca56530848bebdf75cf48cf8e68e0feef98 )
      major : 8
      minor : 0
2017-10-23 00:36:17 DEBUG JdbcEnvironmentInitiator:debugf:389 - JDBC version : 4.1
2017-10-23 00:36:17 INFO  Dialect:<init>:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-10-23 00:36:17 DEBUG IdentifierHelperBuilder:applyIdentifierCasing:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-10-23 00:36:17 DEBUG IdentifierHelperBuilder:build:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-10-23 00:36:17 DEBUG DefaultIdentifierGeneratorFactory:register:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-10-23 00:36:17 DEBUG Namespace:<init>:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-10-23 00:36:17 DEBUG AnnotationBinder:bindClass:511 - Binding entity from annotated class: TestServlet.dao.OrderEntity
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-10-23 00:36:17 DEBUG EntityBinder:bindEntity:419 - Import with entity name OrderEntity
2017-10-23 00:36:17 DEBUG Namespace:<init>:47 - Created database namespace [logicalName=Name{catalog=null, schema=db}, physicalName=Name{catalog=null, schema=db}]
2017-10-23 00:36:17 DEBUG EntityBinder:bindTable:695 - Bind entity TestServlet.dao.OrderEntity on table test_db
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(db.test_db), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-10-23 00:36:17 DEBUG PropertyBinder:makePropertyAndValue:174 - MetadataSourceProcessor property id with lazy=false
2017-10-23 00:36:17 DEBUG AbstractPropertyHolder:resolveAttributeConverterDescriptor:92 - Attempting to locate auto-apply AttributeConverter for property [TestServlet.dao.OrderEntity:id]
2017-10-23 00:36:17 DEBUG SimpleValueBinder:make:411 - building SimpleValue for id
2017-10-23 00:36:17 DEBUG PropertyBinder:makeProperty:265 - Building property id
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(db.test_db), mappingColumn=order_address, insertable=true, updatable=true, unique=false}
2017-10-23 00:36:17 DEBUG PropertyBinder:makePropertyAndValue:174 - MetadataSourceProcessor property AddressCustomer with lazy=false
2017-10-23 00:36:17 DEBUG AbstractPropertyHolder:resolveAttributeConverterDescriptor:92 - Attempting to locate auto-apply AttributeConverter for property [TestServlet.dao.OrderEntity:AddressCustomer]
2017-10-23 00:36:17 DEBUG SimpleValueBinder:make:411 - building SimpleValue for AddressCustomer
2017-10-23 00:36:17 DEBUG PropertyBinder:makeProperty:265 - Building property AddressCustomer
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(db.test_db), mappingColumn=order_date, insertable=true, updatable=true, unique=false}
2017-10-23 00:36:17 DEBUG PropertyBinder:makePropertyAndValue:174 - MetadataSourceProcessor property DateTimeOfOrder with lazy=false
2017-10-23 00:36:17 DEBUG AbstractPropertyHolder:resolveAttributeConverterDescriptor:92 - Attempting to locate auto-apply AttributeConverter for property [TestServlet.dao.OrderEntity:DateTimeOfOrder]
2017-10-23 00:36:17 DEBUG SimpleValueBinder:make:411 - building SimpleValue for DateTimeOfOrder
2017-10-23 00:36:17 DEBUG PropertyBinder:makeProperty:265 - Building property DateTimeOfOrder
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(db.test_db), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
2017-10-23 00:36:17 DEBUG PropertyBinder:makePropertyAndValue:174 - MetadataSourceProcessor property IDCustomer with lazy=false
2017-10-23 00:36:17 DEBUG AbstractPropertyHolder:resolveAttributeConverterDescriptor:92 - Attempting to locate auto-apply AttributeConverter for property [TestServlet.dao.OrderEntity:IDCustomer]
2017-10-23 00:36:17 DEBUG SimpleValueBinder:make:411 - building SimpleValue for IDCustomer
2017-10-23 00:36:17 DEBUG PropertyBinder:makeProperty:265 - Building property IDCustomer
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(db.test_db), mappingColumn=customer_name, insertable=true, updatable=true, unique=false}
2017-10-23 00:36:17 DEBUG PropertyBinder:makePropertyAndValue:174 - MetadataSourceProcessor property customerName with lazy=false
2017-10-23 00:36:17 DEBUG AbstractPropertyHolder:resolveAttributeConverterDescriptor:92 - Attempting to locate auto-apply AttributeConverter for property [TestServlet.dao.OrderEntity:customerName]
2017-10-23 00:36:17 DEBUG SimpleValueBinder:make:411 - building SimpleValue for customerName
2017-10-23 00:36:17 DEBUG PropertyBinder:makeProperty:265 - Building property customerName
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(db.test_db), mappingColumn=order_id, insertable=true, updatable=true, unique=false}
2017-10-23 00:36:17 DEBUG PropertyBinder:makePropertyAndValue:174 - MetadataSourceProcessor property orderID with lazy=false
2017-10-23 00:36:17 DEBUG AbstractPropertyHolder:resolveAttributeConverterDescriptor:92 - Attempting to locate auto-apply AttributeConverter for property [TestServlet.dao.OrderEntity:orderID]
2017-10-23 00:36:17 DEBUG SimpleValueBinder:make:411 - building SimpleValue for orderID
2017-10-23 00:36:17 DEBUG PropertyBinder:makeProperty:265 - Building property orderID
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(db.test_db), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
2017-10-23 00:36:17 DEBUG PropertyBinder:makePropertyAndValue:174 - MetadataSourceProcessor property productID with lazy=false
2017-10-23 00:36:17 DEBUG AbstractPropertyHolder:resolveAttributeConverterDescriptor:92 - Attempting to locate auto-apply AttributeConverter for property [TestServlet.dao.OrderEntity:productID]
2017-10-23 00:36:17 DEBUG SimpleValueBinder:make:411 - building SimpleValue for productID
2017-10-23 00:36:17 DEBUG PropertyBinder:makeProperty:265 - Building property productID
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(db.test_db), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
2017-10-23 00:36:17 DEBUG PropertyBinder:makePropertyAndValue:174 - MetadataSourceProcessor property quantityOfOrderedProduct with lazy=false
2017-10-23 00:36:17 DEBUG AbstractPropertyHolder:resolveAttributeConverterDescriptor:92 - Attempting to locate auto-apply AttributeConverter for property [TestServlet.dao.OrderEntity:quantityOfOrderedProduct]
2017-10-23 00:36:17 DEBUG SimpleValueBinder:make:411 - building SimpleValue for quantityOfOrderedProduct
2017-10-23 00:36:17 DEBUG PropertyBinder:makeProperty:265 - Building property quantityOfOrderedProduct
2017-10-23 00:36:17 DEBUG AnnotationBinder:bindClass:511 - Binding entity from annotated class: TestServlet.dao.CommentEntity
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-10-23 00:36:17 DEBUG EntityBinder:bindEntity:419 - Import with entity name CommentEntity
2017-10-23 00:36:17 DEBUG EntityBinder:bindTable:695 - Bind entity TestServlet.dao.CommentEntity on table customer_comments
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(db.customer_comments), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-10-23 00:36:17 DEBUG PropertyBinder:makePropertyAndValue:174 - MetadataSourceProcessor property id with lazy=false
2017-10-23 00:36:17 DEBUG AbstractPropertyHolder:resolveAttributeConverterDescriptor:92 - Attempting to locate auto-apply AttributeConverter for property [TestServlet.dao.CommentEntity:id]
2017-10-23 00:36:17 DEBUG SimpleValueBinder:make:411 - building SimpleValue for id
2017-10-23 00:36:17 DEBUG PropertyBinder:makeProperty:265 - Building property id
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(db.customer_comments), mappingColumn=customer_id, insertable=true, updatable=true, unique=false}
2017-10-23 00:36:17 DEBUG PropertyBinder:makePropertyAndValue:174 - MetadataSourceProcessor property IDCustomer with lazy=false
2017-10-23 00:36:17 DEBUG AbstractPropertyHolder:resolveAttributeConverterDescriptor:92 - Attempting to locate auto-apply AttributeConverter for property [TestServlet.dao.CommentEntity:IDCustomer]
2017-10-23 00:36:17 DEBUG SimpleValueBinder:make:411 - building SimpleValue for IDCustomer
2017-10-23 00:36:17 DEBUG PropertyBinder:makeProperty:265 - Building property IDCustomer
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(db.customer_comments), mappingColumn=comment_date, insertable=true, updatable=true, unique=false}
2017-10-23 00:36:17 DEBUG PropertyBinder:makePropertyAndValue:174 - MetadataSourceProcessor property commentDate with lazy=false
2017-10-23 00:36:17 DEBUG AbstractPropertyHolder:resolveAttributeConverterDescriptor:92 - Attempting to locate auto-apply AttributeConverter for property [TestServlet.dao.CommentEntity:commentDate]
2017-10-23 00:36:17 DEBUG SimpleValueBinder:make:411 - building SimpleValue for commentDate
2017-10-23 00:36:17 DEBUG PropertyBinder:makeProperty:265 - Building property commentDate
2017-10-23 00:36:17 DEBUG Ejb3Column:bind:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(db.customer_comments), mappingColumn=comment_line, insertable=true, updatable=true, unique=false}
2017-10-23 00:36:17 DEBUG PropertyBinder:makePropertyAndValue:174 - MetadataSourceProcessor property commentLine with lazy=false
2017-10-23 00:36:17 DEBUG AbstractPropertyHolder:resolveAttributeConverterDescriptor:92 - Attempting to locate auto-apply AttributeConverter for property [TestServlet.dao.CommentEntity:commentLine]
2017-10-23 00:36:17 DEBUG SimpleValueBinder:make:411 - building SimpleValue for commentLine
2017-10-23 00:36:17 DEBUG PropertyBinder:makeProperty:265 - Building property commentLine
2017-10-23 00:36:17 DEBUG SimpleValueBinder:fillSimpleValue:456 - Starting fillSimpleValue for id
2017-10-23 00:36:17 DEBUG SimpleValueBinder:fillSimpleValue:456 - Starting fillSimpleValue for AddressCustomer
2017-10-23 00:36:17 DEBUG SimpleValueBinder:fillSimpleValue:456 - Starting fillSimpleValue for DateTimeOfOrder
2017-10-23 00:36:17 DEBUG SimpleValueBinder:fillSimpleValue:456 - Starting fillSimpleValue for IDCustomer
2017-10-23 00:36:17 DEBUG SimpleValueBinder:fillSimpleValue:456 - Starting fillSimpleValue for customerName
2017-10-23 00:36:17 DEBUG SimpleValueBinder:fillSimpleValue:456 - Starting fillSimpleValue for orderID
2017-10-23 00:36:17 DEBUG SimpleValueBinder:fillSimpleValue:456 - Starting fillSimpleValue for productID
2017-10-23 00:36:17 DEBUG SimpleValueBinder:fillSimpleValue:456 - Starting fillSimpleValue for quantityOfOrderedProduct
2017-10-23 00:36:17 DEBUG SimpleValueBinder:fillSimpleValue:456 - Starting fillSimpleValue for id
2017-10-23 00:36:17 DEBUG SimpleValueBinder:fillSimpleValue:456 - Starting fillSimpleValue for IDCustomer
2017-10-23 00:36:17 DEBUG SimpleValueBinder:fillSimpleValue:456 - Starting fillSimpleValue for commentDate
2017-10-23 00:36:17 DEBUG SimpleValueBinder:fillSimpleValue:456 - Starting fillSimpleValue for commentLine
2017-10-23 00:36:17 DEBUG PrimaryKey:addColumn:35 - Forcing column [id] to be non-null as it is part of the primary key for table [test_db]
2017-10-23 00:36:17 DEBUG PrimaryKey:addColumn:35 - Forcing column [id] to be non-null as it is part of the primary key for table [customer_comments]
2017-10-23 00:36:17 DEBUG SessionFactoryImpl:<init>:199 - Building session factory
2017-10-23 00:36:17 DEBUG Settings:<init>:69 - SessionFactory name : null
2017-10-23 00:36:17 DEBUG Settings:<init>:70 - Automatic flush during beforeCompletion(): enabled
2017-10-23 00:36:17 DEBUG Settings:<init>:71 - Automatic session close at end of transaction: disabled
2017-10-23 00:36:17 DEBUG Settings:<init>:73 - Statistics: disabled
2017-10-23 00:36:17 DEBUG Settings:<init>:75 - Deleted entity synthetic identifier rollback: disabled
2017-10-23 00:36:17 DEBUG Settings:<init>:76 - Default entity-mode: pojo
2017-10-23 00:36:17 DEBUG Settings:<init>:77 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-10-23 00:36:17 DEBUG Settings:<init>:78 - Allow initialization of lazy state outside session : disabled
2017-10-23 00:36:17 DEBUG Settings:<init>:80 - Using BatchFetchStyle : LEGACY
2017-10-23 00:36:17 DEBUG Settings:<init>:81 - Default batch fetch size: -1
2017-10-23 00:36:17 DEBUG Settings:<init>:82 - Maximum outer join fetch depth: 2
2017-10-23 00:36:17 DEBUG Settings:<init>:83 - Default null ordering: NONE
2017-10-23 00:36:17 DEBUG Settings:<init>:84 - Order SQL updates by primary key: disabled
2017-10-23 00:36:17 DEBUG Settings:<init>:85 - Order SQL inserts for batching: disabled
2017-10-23 00:36:17 DEBUG Settings:<init>:87 - multi-tenancy strategy : NONE
2017-10-23 00:36:17 DEBUG Settings:<init>:89 - JTA Track by Thread: enabled
2017-10-23 00:36:17 DEBUG Settings:<init>:91 - Query language substitutions: {}
2017-10-23 00:36:17 DEBUG Settings:<init>:92 - JPA query language strict compliance: disabled
2017-10-23 00:36:17 DEBUG Settings:<init>:93 - Named query checking : enabled
2017-10-23 00:36:17 DEBUG Settings:<init>:95 - Second-level cache: enabled
2017-10-23 00:36:17 DEBUG Settings:<init>:96 - Second-level query cache: disabled
2017-10-23 00:36:17 DEBUG Settings:<init>:97 - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@53dcc30d
2017-10-23 00:36:17 DEBUG Settings:<init>:98 - Second-level cache region prefix: null
2017-10-23 00:36:17 DEBUG Settings:<init>:99 - Optimize second-level cache for minimal puts: disabled
2017-10-23 00:36:17 DEBUG Settings:<init>:100 - Structured second-level cache entries: disabled
2017-10-23 00:36:17 DEBUG Settings:<init>:101 - Second-level cache direct-reference entries: disabled
2017-10-23 00:36:17 DEBUG Settings:<init>:102 - Automatic eviction of collection cache: disabled
2017-10-23 00:36:17 DEBUG Settings:<init>:104 - JDBC batch size: 15
2017-10-23 00:36:17 DEBUG Settings:<init>:105 - JDBC batch updates for versioned data: enabled
2017-10-23 00:36:17 DEBUG Settings:<init>:106 - Scrollable result sets: enabled
2017-10-23 00:36:17 DEBUG Settings:<init>:107 - Wrap result sets: disabled
2017-10-23 00:36:17 DEBUG Settings:<init>:108 - JDBC3 getGeneratedKeys(): enabled
2017-10-23 00:36:17 DEBUG Settings:<init>:109 - JDBC result set fetch size: null
2017-10-23 00:36:17 DEBUG Settings:<init>:110 - Connection release mode: AFTER_TRANSACTION
2017-10-23 00:36:17 DEBUG Settings:<init>:111 - Generate SQL with comments: disabled
2017-10-23 00:36:17 DEBUG SessionFactoryImpl:<init>:254 - Session factory constructed with filter configurations : {}
2017-10-23 00:36:17 DEBUG SessionFactoryImpl:<init>:255 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, com.sun.management.jmxremote.authenticate=false, java.class.path=C:\apache-tomcat-9.0.0.M26-windows-x64\apache-tomcat-9.0.0.M26\bin\bootstrap.jar;C:\apache-tomcat-9.0.0.M26-windows-x64\apache-tomcat-9.0.0.M26\bin\tomcat-juli.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=true, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Minsk, os.name=Windows 10, java.vm.specification.version=1.8, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_144\jre\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\sergi, user.language=en, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.home=C:\Program Files\Java\jdk1.8.0_144\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_144\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_144\jre\classes, jdk.tls.ephemeralDHKeySize=2048, user.script=, server.loader=, java.util.logging.config.file=C:\Users\sergi\.IntelliJIdea2017.2\system\tomcat\Unnamed_test\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_144-b01, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=sergi, path.separator=;, hibernate.connection.username=root, common.loader="C:/apache-tomcat-9.0.0.M26-windows-x64/apache-tomcat-9.0.0.M26/lib","C:/apache-tomcat-9.0.0.M26-windows-x64/apache-tomcat-9.0.0.M26/lib/*.jar","C:\apache-tomcat-9.0.0.M26-windows-x64\apache-tomcat-9.0.0.M26/lib","C:\apache-tomcat-9.0.0.M26-windows-x64\apache-tomcat-9.0.0.M26/lib/*.jar", os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_144\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/db, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\apache-tomcat-9.0.0.M26-windows-x64\apache-tomcat-9.0.0.M26\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-web*.jar,log4j-taglib*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=C:\apache-tomcat-9.0.0.M26-windows-x64\apache-tomcat-9.0.0.M26, com.sun.management.jmxremote.port=1099, java.version=1.8.0_144, java.util.concurrent.ForkJoinPool.common.threadFactory=org.apache.catalina.startup.SafeForkJoinWorkerThreadFactory, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,websocket-api.jar,jaspic-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-storeconfig.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-util-scan.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-websocket.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,tools.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,taglibs-standard-spec-*.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,junit.jar,junit-*.jar,hamcrest-*.jar,easymock-*.jar,cglib-*.jar,objenesis-*.jar,ant-launcher.jar,cobertura-*.jar,asm-*.jar,dom4j-*.jar,icu4j-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,oro-*.jar,servlet-api-*.jar,tagsoup-*.jar,xmlParserAPIs-*.jar,xom-*.jar, user.dir=C:\apache-tomcat-9.0.0.M26-windows-x64\apache-tomcat-9.0.0.M26\bin, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\sergi\.IntelliJIdea2017.2\system\tomcat\Unnamed_test, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@42ee02a, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=C:\Program Files\Java\jdk1.8.0_144\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Program Files (x86)\Skype\Phone\;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Users\sergi\AppData\Local\Microsoft\WindowsApps;C:\Users\sergi\AppData\Roaming\npm;C:\Users\sergi\AppData\Local\GitHubDesktop\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.144-b01, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, hibernate.connection.pool_size=1, tomcat.util.buf.StringCache.byte.enabled=true, java.class.version=52.0}
2017-10-23 00:36:17 INFO  Version:<clinit>:21 - HV000001: Hibernate Validator 6.0.3.Final
2017-10-23 00:36:17 DEBUG TraversableResolvers:getDefault:92 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2017-10-23 00:36:17 DEBUG TraversableResolvers:getDefault:102 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2017-10-23 00:36:17 DEBUG TraversableResolvers:getDefault:108 - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2017-10-23 00:36:17 DEBUG ValidationXmlParser:getValidationXmlInputStream:132 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2017-10-23 00:36:17 DEBUG ResourceLoaderHelper:getResettableInputStreamForPath:58 - Trying to load META-INF/validation.xml via TCCL
2017-10-23 00:36:17 DEBUG ResourceLoaderHelper:getResettableInputStreamForPath:64 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2017-10-23 00:36:17 DEBUG ValidationXmlParser:getValidationXmlInputStream:139 - No META-INF/validation.xml found. Using annotation based configuration only.
2017-10-23 00:36:17 DEBUG ResourceBundleMessageInterpolator:buildExpressionFactory:88 - Loaded expression factory via original TCCL
2017-10-23 00:36:18 DEBUG ClassLoaderAccessImpl:classForName:55 - Not known whether passed class name [TestServlet.dao.CommentEntity] is safe
2017-10-23 00:36:18 DEBUG ClassLoaderAccessImpl:classForName:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : TestServlet.dao.CommentEntity
2017-10-23 00:36:18 DEBUG ClassLoaderAccessImpl:classForName:55 - Not known whether passed class name [TestServlet.dao.OrderEntity] is safe
2017-10-23 00:36:18 DEBUG ClassLoaderAccessImpl:classForName:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : TestServlet.dao.OrderEntity
2017-10-23 00:36:18 DEBUG JaccIntegrator:doIntegration:80 - Skipping JACC integration as it was not enabled
2017-10-23 00:36:18 DEBUG SessionFactoryImpl:<init>:294 - Instantiated session factory
2017-10-23 00:36:18 DEBUG ClassLoaderAccessImpl:classForName:55 - Not known whether passed class name [TestServlet.dao.CommentEntity] is safe
2017-10-23 00:36:18 DEBUG ClassLoaderAccessImpl:classForName:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : TestServlet.dao.CommentEntity
2017-10-23 00:36:18 DEBUG ClassLoaderAccessImpl:classForName:55 - Not known whether passed class name [TestServlet.dao.CommentEntity] is safe
2017-10-23 00:36:18 DEBUG ClassLoaderAccessImpl:classForName:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : TestServlet.dao.CommentEntity
2017-10-23 00:36:18 DEBUG ClassLoaderAccessImpl:classForName:55 - Not known whether passed class name [TestServlet.dao.OrderEntity] is safe
2017-10-23 00:36:18 DEBUG ClassLoaderAccessImpl:classForName:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : TestServlet.dao.OrderEntity
2017-10-23 00:36:18 DEBUG ClassLoaderAccessImpl:classForName:55 - Not known whether passed class name [TestServlet.dao.OrderEntity] is safe
2017-10-23 00:36:18 DEBUG ClassLoaderAccessImpl:classForName:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : TestServlet.dao.OrderEntity
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:logStaticSQL:3598 - Static SQL for entity: TestServlet.dao.CommentEntity
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:logStaticSQL:3603 -  Version select: select id from customer_comments where id =?
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:logStaticSQL:3606 -  Snapshot select: select commentent_.id, commentent_.customer_id as customer2_0_, commentent_.comment_date as comment_3_0_, commentent_.comment_line as comment_4_0_ from customer_comments commentent_ where commentent_.id=?
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:debugf:394 -  Insert 0: insert into customer_comments (customer_id, comment_date, comment_line, id) values (?, ?, ?, ?)
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:debugf:394 -  Update 0: update customer_comments set customer_id=?, comment_date=?, comment_line=? where id=?
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:debugf:394 -  Delete 0: delete from customer_comments where id=?
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:logStaticSQL:3614 -  Identity insert: insert into customer_comments (customer_id, comment_date, comment_line) values (?, ?, ?)
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53d493d9]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentDate
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentLine
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.CommentEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.CommentEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.CommentEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.CommentEntity)
          - SQL table alias mapping - commentent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.CommentEntity [NONE]: select commentent0_.id as id1_0_0_, commentent0_.customer_id as customer2_0_0_, commentent0_.comment_date as comment_3_0_0_, commentent0_.comment_line as comment_4_0_0_ from customer_comments commentent0_ where commentent0_.id=?
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7528d556]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentDate
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentLine
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.CommentEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.CommentEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.CommentEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.CommentEntity)
          - SQL table alias mapping - commentent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.CommentEntity [READ]: select commentent0_.id as id1_0_0_, commentent0_.customer_id as customer2_0_0_, commentent0_.comment_date as comment_3_0_0_, commentent0_.comment_line as comment_4_0_0_ from customer_comments commentent0_ where commentent0_.id=?
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fcae958]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentDate
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentLine
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.CommentEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.CommentEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.CommentEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.CommentEntity)
          - SQL table alias mapping - commentent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.CommentEntity [UPGRADE]: select commentent0_.id as id1_0_0_, commentent0_.customer_id as customer2_0_0_, commentent0_.comment_date as comment_3_0_0_, commentent0_.comment_line as comment_4_0_0_ from customer_comments commentent0_ where commentent0_.id=? for update
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f79c35]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentDate
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentLine
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.CommentEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.CommentEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.CommentEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.CommentEntity)
          - SQL table alias mapping - commentent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.CommentEntity [UPGRADE_NOWAIT]: select commentent0_.id as id1_0_0_, commentent0_.customer_id as customer2_0_0_, commentent0_.comment_date as comment_3_0_0_, commentent0_.comment_line as comment_4_0_0_ from customer_comments commentent0_ where commentent0_.id=? for update
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38292d55]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentDate
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentLine
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.CommentEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.CommentEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.CommentEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.CommentEntity)
          - SQL table alias mapping - commentent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.CommentEntity [UPGRADE_SKIPLOCKED]: select commentent0_.id as id1_0_0_, commentent0_.customer_id as customer2_0_0_, commentent0_.comment_date as comment_3_0_0_, commentent0_.comment_line as comment_4_0_0_ from customer_comments commentent0_ where commentent0_.id=? for update
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af2eb2]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentDate
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentLine
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.CommentEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.CommentEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.CommentEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.CommentEntity)
          - SQL table alias mapping - commentent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.CommentEntity [FORCE]: select commentent0_.id as id1_0_0_, commentent0_.customer_id as customer2_0_0_, commentent0_.comment_date as comment_3_0_0_, commentent0_.comment_line as comment_4_0_0_ from customer_comments commentent0_ where commentent0_.id=? for update
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d19d19]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentDate
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentLine
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.CommentEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.CommentEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.CommentEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.CommentEntity)
          - SQL table alias mapping - commentent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.CommentEntity [PESSIMISTIC_READ]: select commentent0_.id as id1_0_0_, commentent0_.customer_id as customer2_0_0_, commentent0_.comment_date as comment_3_0_0_, commentent0_.comment_line as comment_4_0_0_ from customer_comments commentent0_ where commentent0_.id=? lock in share mode
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d37b12d]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentDate
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentLine
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.CommentEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.CommentEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.CommentEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.CommentEntity)
          - SQL table alias mapping - commentent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.CommentEntity [PESSIMISTIC_WRITE]: select commentent0_.id as id1_0_0_, commentent0_.customer_id as customer2_0_0_, commentent0_.comment_date as comment_3_0_0_, commentent0_.comment_line as comment_4_0_0_ from customer_comments commentent0_ where commentent0_.id=? for update
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a2ce81c]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentDate
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentLine
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.CommentEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.CommentEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.CommentEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.CommentEntity)
          - SQL table alias mapping - commentent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.CommentEntity [PESSIMISTIC_FORCE_INCREMENT]: select commentent0_.id as id1_0_0_, commentent0_.customer_id as customer2_0_0_, commentent0_.comment_date as comment_3_0_0_, commentent0_.comment_line as comment_4_0_0_ from customer_comments commentent0_ where commentent0_.id=? for update
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cfdfb43]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentDate
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentLine
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.CommentEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.CommentEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.CommentEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.CommentEntity)
          - SQL table alias mapping - commentent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.CommentEntity [OPTIMISTIC]: select commentent0_.id as id1_0_0_, commentent0_.customer_id as customer2_0_0_, commentent0_.comment_date as comment_3_0_0_, commentent0_.comment_line as comment_4_0_0_ from customer_comments commentent0_ where commentent0_.id=?
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2aca2696]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentDate
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : commentLine
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.CommentEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.CommentEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.CommentEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.CommentEntity)
          - SQL table alias mapping - commentent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.CommentEntity [OPTIMISTIC_FORCE_INCREMENT]: select commentent0_.id as id1_0_0_, commentent0_.customer_id as customer2_0_0_, commentent0_.comment_date as comment_3_0_0_, commentent0_.comment_line as comment_4_0_0_ from customer_comments commentent0_ where commentent0_.id=?
2017-10-23 00:36:18 DEBUG Loader:<init>:38 - Static select for action ACTION_MERGE on entity TestServlet.dao.CommentEntity: select commentent0_.id as id1_0_0_, commentent0_.customer_id as customer2_0_0_, commentent0_.comment_date as comment_3_0_0_, commentent0_.comment_line as comment_4_0_0_ from customer_comments commentent0_ where commentent0_.id=?
2017-10-23 00:36:18 DEBUG Loader:<init>:38 - Static select for action ACTION_REFRESH on entity TestServlet.dao.CommentEntity: select commentent0_.id as id1_0_0_, commentent0_.customer_id as customer2_0_0_, commentent0_.comment_date as comment_3_0_0_, commentent0_.comment_line as comment_4_0_0_ from customer_comments commentent0_ where commentent0_.id=?
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:logStaticSQL:3598 - Static SQL for entity: TestServlet.dao.OrderEntity
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:logStaticSQL:3603 -  Version select: select id from test_db where id =?
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:logStaticSQL:3606 -  Snapshot select: select orderentit_.id, orderentit_.order_address as order_ad2_1_, orderentit_.order_date as order_da3_1_, orderentit_.customer_id as customer4_1_, orderentit_.customer_name as customer5_1_, orderentit_.order_id as order_id6_1_, orderentit_.product_id as product_7_1_, orderentit_.quantity as quantity8_1_ from test_db orderentit_ where orderentit_.id=?
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:debugf:394 -  Insert 0: insert into test_db (order_address, order_date, customer_id, customer_name, order_id, product_id, quantity, id) values (?, ?, ?, ?, ?, ?, ?, ?)
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:debugf:394 -  Update 0: update test_db set order_address=?, order_date=?, customer_id=?, customer_name=?, order_id=?, product_id=?, quantity=? where id=?
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:debugf:394 -  Delete 0: delete from test_db where id=?
2017-10-23 00:36:18 DEBUG AbstractEntityPersister:logStaticSQL:3614 -  Identity insert: insert into test_db (order_address, order_date, customer_id, customer_name, order_id, product_id, quantity) values (?, ?, ?, ?, ?, ?, ?)
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f39a809]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : AddressCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : DateTimeOfOrder
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : customerName
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : orderID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : productID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : quantityOfOrderedProduct
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.OrderEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.OrderEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.OrderEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.OrderEntity)
          - SQL table alias mapping - orderentit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.OrderEntity [NONE]: select orderentit0_.id as id1_1_0_, orderentit0_.order_address as order_ad2_1_0_, orderentit0_.order_date as order_da3_1_0_, orderentit0_.customer_id as customer4_1_0_, orderentit0_.customer_name as customer5_1_0_, orderentit0_.order_id as order_id6_1_0_, orderentit0_.product_id as product_7_1_0_, orderentit0_.quantity as quantity8_1_0_ from test_db orderentit0_ where orderentit0_.id=?
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d848881]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : AddressCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : DateTimeOfOrder
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : customerName
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : orderID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : productID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : quantityOfOrderedProduct
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.OrderEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.OrderEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.OrderEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.OrderEntity)
          - SQL table alias mapping - orderentit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.OrderEntity [READ]: select orderentit0_.id as id1_1_0_, orderentit0_.order_address as order_ad2_1_0_, orderentit0_.order_date as order_da3_1_0_, orderentit0_.customer_id as customer4_1_0_, orderentit0_.customer_name as customer5_1_0_, orderentit0_.order_id as order_id6_1_0_, orderentit0_.product_id as product_7_1_0_, orderentit0_.quantity as quantity8_1_0_ from test_db orderentit0_ where orderentit0_.id=?
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d016ce8]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : AddressCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : DateTimeOfOrder
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : customerName
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : orderID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : productID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : quantityOfOrderedProduct
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.OrderEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.OrderEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.OrderEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.OrderEntity)
          - SQL table alias mapping - orderentit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.OrderEntity [UPGRADE]: select orderentit0_.id as id1_1_0_, orderentit0_.order_address as order_ad2_1_0_, orderentit0_.order_date as order_da3_1_0_, orderentit0_.customer_id as customer4_1_0_, orderentit0_.customer_name as customer5_1_0_, orderentit0_.order_id as order_id6_1_0_, orderentit0_.product_id as product_7_1_0_, orderentit0_.quantity as quantity8_1_0_ from test_db orderentit0_ where orderentit0_.id=? for update
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a0e81c]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : AddressCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : DateTimeOfOrder
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : customerName
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : orderID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : productID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : quantityOfOrderedProduct
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.OrderEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.OrderEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.OrderEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.OrderEntity)
          - SQL table alias mapping - orderentit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.OrderEntity [UPGRADE_NOWAIT]: select orderentit0_.id as id1_1_0_, orderentit0_.order_address as order_ad2_1_0_, orderentit0_.order_date as order_da3_1_0_, orderentit0_.customer_id as customer4_1_0_, orderentit0_.customer_name as customer5_1_0_, orderentit0_.order_id as order_id6_1_0_, orderentit0_.product_id as product_7_1_0_, orderentit0_.quantity as quantity8_1_0_ from test_db orderentit0_ where orderentit0_.id=? for update
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f95b018]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : AddressCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : DateTimeOfOrder
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : customerName
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : orderID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : productID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : quantityOfOrderedProduct
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.OrderEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.OrderEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.OrderEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.OrderEntity)
          - SQL table alias mapping - orderentit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.OrderEntity [UPGRADE_SKIPLOCKED]: select orderentit0_.id as id1_1_0_, orderentit0_.order_address as order_ad2_1_0_, orderentit0_.order_date as order_da3_1_0_, orderentit0_.customer_id as customer4_1_0_, orderentit0_.customer_name as customer5_1_0_, orderentit0_.order_id as order_id6_1_0_, orderentit0_.product_id as product_7_1_0_, orderentit0_.quantity as quantity8_1_0_ from test_db orderentit0_ where orderentit0_.id=? for update
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a7be000]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : AddressCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : DateTimeOfOrder
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : customerName
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : orderID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : productID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : quantityOfOrderedProduct
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.OrderEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.OrderEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.OrderEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.OrderEntity)
          - SQL table alias mapping - orderentit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.OrderEntity [FORCE]: select orderentit0_.id as id1_1_0_, orderentit0_.order_address as order_ad2_1_0_, orderentit0_.order_date as order_da3_1_0_, orderentit0_.customer_id as customer4_1_0_, orderentit0_.customer_name as customer5_1_0_, orderentit0_.order_id as order_id6_1_0_, orderentit0_.product_id as product_7_1_0_, orderentit0_.quantity as quantity8_1_0_ from test_db orderentit0_ where orderentit0_.id=? for update
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f538a52]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : AddressCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : DateTimeOfOrder
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : customerName
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : orderID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : productID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : quantityOfOrderedProduct
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.OrderEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.OrderEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.OrderEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.OrderEntity)
          - SQL table alias mapping - orderentit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.OrderEntity [PESSIMISTIC_READ]: select orderentit0_.id as id1_1_0_, orderentit0_.order_address as order_ad2_1_0_, orderentit0_.order_date as order_da3_1_0_, orderentit0_.customer_id as customer4_1_0_, orderentit0_.customer_name as customer5_1_0_, orderentit0_.order_id as order_id6_1_0_, orderentit0_.product_id as product_7_1_0_, orderentit0_.quantity as quantity8_1_0_ from test_db orderentit0_ where orderentit0_.id=? lock in share mode
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ccfc793]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : AddressCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : DateTimeOfOrder
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : customerName
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : orderID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : productID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : quantityOfOrderedProduct
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.OrderEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.OrderEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.OrderEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.OrderEntity)
          - SQL table alias mapping - orderentit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.OrderEntity [PESSIMISTIC_WRITE]: select orderentit0_.id as id1_1_0_, orderentit0_.order_address as order_ad2_1_0_, orderentit0_.order_date as order_da3_1_0_, orderentit0_.customer_id as customer4_1_0_, orderentit0_.customer_name as customer5_1_0_, orderentit0_.order_id as order_id6_1_0_, orderentit0_.product_id as product_7_1_0_, orderentit0_.quantity as quantity8_1_0_ from test_db orderentit0_ where orderentit0_.id=? for update
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36ce6c8]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : AddressCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : DateTimeOfOrder
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : customerName
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : orderID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : productID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : quantityOfOrderedProduct
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.OrderEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.OrderEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.OrderEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.OrderEntity)
          - SQL table alias mapping - orderentit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.OrderEntity [PESSIMISTIC_FORCE_INCREMENT]: select orderentit0_.id as id1_1_0_, orderentit0_.order_address as order_ad2_1_0_, orderentit0_.order_date as order_da3_1_0_, orderentit0_.customer_id as customer4_1_0_, orderentit0_.customer_name as customer5_1_0_, orderentit0_.order_id as order_id6_1_0_, orderentit0_.product_id as product_7_1_0_, orderentit0_.quantity as quantity8_1_0_ from test_db orderentit0_ where orderentit0_.id=? for update
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42b5646f]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : AddressCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : DateTimeOfOrder
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : customerName
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : orderID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : productID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : quantityOfOrderedProduct
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.OrderEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.OrderEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.OrderEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.OrderEntity)
          - SQL table alias mapping - orderentit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.OrderEntity [OPTIMISTIC]: select orderentit0_.id as id1_1_0_, orderentit0_.order_address as order_ad2_1_0_, orderentit0_.order_date as order_da3_1_0_, orderentit0_.customer_id as customer4_1_0_, orderentit0_.customer_name as customer5_1_0_, orderentit0_.order_id as order_id6_1_0_, orderentit0_.product_id as product_7_1_0_, orderentit0_.quantity as quantity8_1_0_ from test_db orderentit0_ where orderentit0_.id=?
2017-10-23 00:36:18 DEBUG QuerySpacesImpl:registerQuerySpace:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@517e81e7]
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : AddressCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : DateTimeOfOrder
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : IDCustomer
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : customerName
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : orderID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : productID
2017-10-23 00:36:18 DEBUG MetamodelGraphWalker:visitAttributeDefinition:137 - Visiting attribute path : quantityOfOrderedProduct
2017-10-23 00:36:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:150 - Building LoadPlan...
2017-10-23 00:36:18 DEBUG LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:101 - processing queryspace <gen:0>
2017-10-23 00:36:18 DEBUG LoadPlanTreePrinter:logTree:55 - LoadPlan(entity=TestServlet.dao.OrderEntity)
    - Returns
       - EntityReturnImpl(entity=TestServlet.dao.OrderEntity, querySpaceUid=<gen:0>, path=TestServlet.dao.OrderEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=TestServlet.dao.OrderEntity)
          - SQL table alias mapping - orderentit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2017-10-23 00:36:18 DEBUG EntityLoader:<init>:115 - Static select for entity TestServlet.dao.OrderEntity [OPTIMISTIC_FORCE_INCREMENT]: select orderentit0_.id as id1_1_0_, orderentit0_.order_address as order_ad2_1_0_, orderentit0_.order_date as order_da3_1_0_, orderentit0_.customer_id as customer4_1_0_, orderentit0_.customer_name as customer5_1_0_, orderentit0_.order_id as order_id6_1_0_, orderentit0_.product_id as product_7_1_0_, orderentit0_.quantity as quantity8_1_0_ from test_db orderentit0_ where orderentit0_.id=?
2017-10-23 00:36:18 DEBUG Loader:<init>:38 - Static select for action ACTION_MERGE on entity TestServlet.dao.OrderEntity: select orderentit0_.id as id1_1_0_, orderentit0_.order_address as order_ad2_1_0_, orderentit0_.order_date as order_da3_1_0_, orderentit0_.customer_id as customer4_1_0_, orderentit0_.customer_name as customer5_1_0_, orderentit0_.order_id as order_id6_1_0_, orderentit0_.product_id as product_7_1_0_, orderentit0_.quantity as quantity8_1_0_ from test_db orderentit0_ where orderentit0_.id=?
2017-10-23 00:36:18 DEBUG Loader:<init>:38 - Static select for action ACTION_REFRESH on entity TestServlet.dao.OrderEntity: select orderentit0_.id as id1_1_0_, orderentit0_.order_address as order_ad2_1_0_, orderentit0_.order_date as order_da3_1_0_, orderentit0_.customer_id as customer4_1_0_, orderentit0_.customer_name as customer5_1_0_, orderentit0_.order_id as order_id6_1_0_, orderentit0_.product_id as product_7_1_0_, orderentit0_.quantity as quantity8_1_0_ from test_db orderentit0_ where orderentit0_.id=?
2017-10-23 00:36:18 DEBUG SchemaManagementToolCoordinator:process:56 - No actions specified; doing nothing
2017-10-23 00:36:18 DEBUG NamedQueryRepository:checkNamedQueries:151 - Checking 0 named HQL queries
2017-10-23 00:36:18 DEBUG NamedQueryRepository:checkNamedQueries:167 - Checking 0 named SQL queries
2017-10-23 00:36:18 DEBUG SessionFactoryRegistry:<init>:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7ad12ed0
2017-10-23 00:36:18 DEBUG SessionFactoryRegistry:addSessionFactory:74 - Registering SessionFactory: 5cab47ab-273e-40a1-b9b0-324fb2e1a103 (<unnamed>)
2017-10-23 00:36:18 DEBUG SessionFactoryRegistry:addSessionFactory:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-10-23 00:36:18 DEBUG StatisticsInitiator:initiateServiceInternal:82 - Statistics initialized [enabled=false]
2017-10-23 00:36:18 WARN  deprecation:createCriteria:1811 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2017-10-23 00:36:18 DEBUG SQL:logStatement:92 - select this_.id as id1_0_0_, this_.customer_id as customer2_0_0_, this_.comment_date as comment_3_0_0_, this_.comment_line as comment_4_0_0_ from customer_comments this_
2017-10-23 00:36:18 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:36:18 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:18 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:36:18 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:18 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:36:18 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:18 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:36:18 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:18 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:36:18 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:18 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:36:18 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:18 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:36:18 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:18 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:18 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:18 DEBUG QueryTranslatorFactoryInitiator:initiateService:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6a367b2e
2017-10-23 00:36:18 INFO  QueryTranslatorFactoryInitiator:initiateService:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-10-23 00:36:19 DEBUG QueryTranslatorImpl:parse:282 - parse() - HQL: FROM TestServlet.dao.CommentEntity as OE WHERE OE.IDCustomer = :customerID
2017-10-23 00:36:19 DEBUG QueryTranslatorImpl:showHqlAst:300 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[IDENT] Node: 'TestServlet'
    |        |  |  \-[IDENT] Node: 'dao'
    |        |  \-[IDENT] Node: 'CommentEntity'
    |        \-[ALIAS] Node: 'OE'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'OE'
          |  \-[IDENT] Node: 'IDCustomer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'customerID'

2017-10-23 00:36:19 DEBUG ErrorCounter:throwQueryException:95 - throwQueryException() : no errors
2017-10-23 00:36:19 DEBUG HqlSqlBaseWalker:beforeStatement:124 - select << begin [level=1, statement=select]
2017-10-23 00:36:19 DEBUG FromElement:doInitialize:147 - FromClause{level=1} : TestServlet.dao.CommentEntity (OE) -> commentent0_
2017-10-23 00:36:19 DEBUG FromReferenceNode:setResolved:60 - Resolved : OE -> commentent0_.id
2017-10-23 00:36:19 DEBUG DotNode:getDataType:666 - getDataType() : IDCustomer -> org.hibernate.type.IntegerType@68366d5b
2017-10-23 00:36:19 DEBUG FromReferenceNode:setResolved:60 - Resolved : OE.IDCustomer -> commentent0_.customer_id
2017-10-23 00:36:19 DEBUG HqlSqlBaseWalker:beforeStatementCompletion:128 - select : finishing up [level=1, statement=select]
2017-10-23 00:36:19 DEBUG HqlSqlWalker:processQuery:745 - processQuery() :  ( SELECT ( FromClause{level=1} customer_comments commentent0_ ) ( WHERE ( = ( commentent0_.customer_id commentent0_.id IDCustomer ) ? ) ) )
2017-10-23 00:36:19 DEBUG HqlSqlWalker:createSelectClauseFromFromClause:1021 - Derived SELECT clause created.
2017-10-23 00:36:19 DEBUG JoinProcessor:addJoinNodes:187 - Using FROM fragment [customer_comments commentent0_]
2017-10-23 00:36:19 DEBUG HqlSqlBaseWalker:afterStatementCompletion:132 - select >> end [level=1, statement=select]
2017-10-23 00:36:19 DEBUG QueryTranslatorImpl:analyze:269 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_comments)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'commentent0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=OE,role=null,tableName=customer_comments,tableAlias=commentent0_,origin=null,columns={,className=TestServlet.dao.CommentEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'commentent0_.customer_id as customer2_0_, commentent0_.comment_date as comment_3_0_, commentent0_.comment_line as comment_4_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[OE], fromElementByTableAlias=[commentent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_comments commentent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=OE,role=null,tableName=customer_comments,tableAlias=commentent0_,origin=null,columns={,className=TestServlet.dao.CommentEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'commentent0_.customer_id' {propertyName=IDCustomer,dereferenceType=PRIMITIVE,getPropertyPath=IDCustomer,path=OE.IDCustomer,tableAlias=commentent0_,className=TestServlet.dao.CommentEntity,classAlias=OE}
          |  +-[ALIAS_REF] IdentNode: 'commentent0_.id' {alias=OE, className=TestServlet.dao.CommentEntity, tableAlias=commentent0_}
          |  \-[IDENT] IdentNode: 'IDCustomer' {originalText=IDCustomer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=customerID, expectedType=org.hibernate.type.IntegerType@68366d5b}

2017-10-23 00:36:19 DEBUG ErrorCounter:throwQueryException:95 - throwQueryException() : no errors
2017-10-23 00:36:19 DEBUG QueryTranslatorImpl:generate:251 - HQL: FROM TestServlet.dao.CommentEntity as OE WHERE OE.IDCustomer = :customerID
2017-10-23 00:36:19 DEBUG QueryTranslatorImpl:generate:252 - SQL: select commentent0_.id as id1_0_, commentent0_.customer_id as customer2_0_, commentent0_.comment_date as comment_3_0_, commentent0_.comment_line as comment_4_0_ from customer_comments commentent0_ where commentent0_.customer_id=?
2017-10-23 00:36:19 DEBUG ErrorCounter:throwQueryException:95 - throwQueryException() : no errors
2017-10-23 00:36:19 DEBUG SQL:logStatement:92 - select commentent0_.id as id1_0_, commentent0_.customer_id as customer2_0_, commentent0_.comment_date as comment_3_0_, commentent0_.comment_line as comment_4_0_ from customer_comments commentent0_ where commentent0_.customer_id=?
2017-10-23 00:36:19 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:36:19 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:19 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:36:19 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:19 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:36:19 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:19 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:36:19 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:19 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:36:19 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:19 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:36:19 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:19 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:36:19 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:19 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:19 INFO  DataBase:getCommentsList:45 - getting comment list (DAO)!_> success!
2017-10-23 00:36:19 INFO  OrderBean:getCommentsList:54 - All comments going to convert
2017-10-23 00:36:22 INFO  OrderBean:addComment:16 - adding comment
2017-10-23 00:36:22 INFO  OrderBean:addComment:27 - adding comment go to DAO layer
2017-10-23 00:36:22 INFO  DataBase:addComment:17 - adding comment (DAO layer)
2017-10-23 00:36:22 DEBUG TransactionImpl:begin:55 - begin
2017-10-23 00:36:22 DEBUG ActionQueue:addResolvedEntityInsertAction:279 - Executing identity-insert immediately
2017-10-23 00:36:22 DEBUG SQL:logStatement:92 - insert into customer_comments (customer_id, comment_date, comment_line) values (?, ?, ?)
2017-10-23 00:36:22 DEBUG IdentifierGeneratorHelper:getGeneratedIdentity:78 - Natively generated identity: 45
2017-10-23 00:36:22 DEBUG ResourceRegistryStandardImpl:release:104 - HHH000387: ResultSet's statement was not registered
2017-10-23 00:36:22 DEBUG TransactionImpl:commit:66 - committing
2017-10-23 00:36:22 DEBUG AbstractFlushingEventListener:prepareEntityFlushes:132 - Processing flush-time cascades
2017-10-23 00:36:22 DEBUG AbstractFlushingEventListener:prepareCollectionFlushes:174 - Dirty checking collections
2017-10-23 00:36:22 DEBUG AbstractFlushingEventListener:logFlushResults:106 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-10-23 00:36:22 DEBUG AbstractFlushingEventListener:logFlushResults:113 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-10-23 00:36:22 DEBUG EntityPrinter:toString:102 - Listing entities:
2017-10-23 00:36:22 DEBUG EntityPrinter:toString:109 - TestServlet.dao.CommentEntity{IDCustomer=2, commentDate=2017-10-23 00:36:22, id=45, commentLine=
        thfghg}
2017-10-23 00:36:22 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:22 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:22 INFO  DataBase:addComment:25 - adding comment (DAO layer) -> Success!
2017-10-23 00:36:22 INFO  OrderBean:addComment:29 - adding comment go to DAO layer -> comment was successfully added!
2017-10-23 00:36:22 INFO  OrderBean:getCommentsList:37 - Getting all comments and converting into JSON
2017-10-23 00:36:22 INFO  DataBase:getCommentsList:36 - getting comment list (DAO)!
2017-10-23 00:36:22 WARN  deprecation:createCriteria:1811 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2017-10-23 00:36:22 DEBUG SQL:logStatement:92 - select this_.id as id1_0_0_, this_.customer_id as customer2_0_0_, this_.comment_date as comment_3_0_0_, this_.comment_line as comment_4_0_0_ from customer_comments this_
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 7
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:22 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:22 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:22 DEBUG SQL:logStatement:92 - select commentent0_.id as id1_0_, commentent0_.customer_id as customer2_0_, commentent0_.comment_date as comment_3_0_, commentent0_.comment_line as comment_4_0_ from customer_comments commentent0_ where commentent0_.customer_id=?
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:22 DEBUG Loader:debugf:384 - Result set row: 7
2017-10-23 00:36:22 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:22 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:22 INFO  DataBase:getCommentsList:45 - getting comment list (DAO)!_> success!
2017-10-23 00:36:22 INFO  OrderBean:getCommentsList:43 - Just last comment
2017-10-23 00:36:23 INFO  OrderBean:addComment:16 - adding comment
2017-10-23 00:36:23 INFO  OrderBean:addComment:27 - adding comment go to DAO layer
2017-10-23 00:36:23 INFO  DataBase:addComment:17 - adding comment (DAO layer)
2017-10-23 00:36:23 DEBUG TransactionImpl:begin:55 - begin
2017-10-23 00:36:23 DEBUG ActionQueue:addResolvedEntityInsertAction:279 - Executing identity-insert immediately
2017-10-23 00:36:23 DEBUG SQL:logStatement:92 - insert into customer_comments (customer_id, comment_date, comment_line) values (?, ?, ?)
2017-10-23 00:36:23 DEBUG IdentifierGeneratorHelper:getGeneratedIdentity:78 - Natively generated identity: 46
2017-10-23 00:36:23 DEBUG ResourceRegistryStandardImpl:release:104 - HHH000387: ResultSet's statement was not registered
2017-10-23 00:36:23 DEBUG TransactionImpl:commit:66 - committing
2017-10-23 00:36:23 DEBUG AbstractFlushingEventListener:prepareEntityFlushes:132 - Processing flush-time cascades
2017-10-23 00:36:23 DEBUG AbstractFlushingEventListener:prepareCollectionFlushes:174 - Dirty checking collections
2017-10-23 00:36:23 DEBUG AbstractFlushingEventListener:logFlushResults:106 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-10-23 00:36:23 DEBUG AbstractFlushingEventListener:logFlushResults:113 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-10-23 00:36:23 DEBUG EntityPrinter:toString:102 - Listing entities:
2017-10-23 00:36:23 DEBUG EntityPrinter:toString:109 - TestServlet.dao.CommentEntity{IDCustomer=2, commentDate=2017-10-23 00:36:23, id=46, commentLine=
        thfghg}
2017-10-23 00:36:23 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:23 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:23 INFO  DataBase:addComment:25 - adding comment (DAO layer) -> Success!
2017-10-23 00:36:23 INFO  OrderBean:addComment:29 - adding comment go to DAO layer -> comment was successfully added!
2017-10-23 00:36:23 INFO  OrderBean:getCommentsList:37 - Getting all comments and converting into JSON
2017-10-23 00:36:23 INFO  DataBase:getCommentsList:36 - getting comment list (DAO)!
2017-10-23 00:36:23 WARN  deprecation:createCriteria:1811 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2017-10-23 00:36:23 DEBUG SQL:logStatement:92 - select this_.id as id1_0_0_, this_.customer_id as customer2_0_0_, this_.comment_date as comment_3_0_0_, this_.comment_line as comment_4_0_0_ from customer_comments this_
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 7
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 8
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#46]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#46]
2017-10-23 00:36:23 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#46]
2017-10-23 00:36:23 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:23 DEBUG SQL:logStatement:92 - select commentent0_.id as id1_0_, commentent0_.customer_id as customer2_0_, commentent0_.comment_date as comment_3_0_, commentent0_.comment_line as comment_4_0_ from customer_comments commentent0_ where commentent0_.customer_id=?
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 7
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:23 DEBUG Loader:debugf:384 - Result set row: 8
2017-10-23 00:36:23 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#46]
2017-10-23 00:36:23 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:23 INFO  DataBase:getCommentsList:45 - getting comment list (DAO)!_> success!
2017-10-23 00:36:23 INFO  OrderBean:getCommentsList:43 - Just last comment
2017-10-23 00:36:28 INFO  OrderBean:addComment:16 - adding comment
2017-10-23 00:36:28 INFO  OrderBean:addComment:27 - adding comment go to DAO layer
2017-10-23 00:36:28 INFO  DataBase:addComment:17 - adding comment (DAO layer)
2017-10-23 00:36:28 DEBUG TransactionImpl:begin:55 - begin
2017-10-23 00:36:28 DEBUG ActionQueue:addResolvedEntityInsertAction:279 - Executing identity-insert immediately
2017-10-23 00:36:28 DEBUG SQL:logStatement:92 - insert into customer_comments (customer_id, comment_date, comment_line) values (?, ?, ?)
2017-10-23 00:36:28 DEBUG IdentifierGeneratorHelper:getGeneratedIdentity:78 - Natively generated identity: 47
2017-10-23 00:36:28 DEBUG ResourceRegistryStandardImpl:release:104 - HHH000387: ResultSet's statement was not registered
2017-10-23 00:36:28 DEBUG TransactionImpl:commit:66 - committing
2017-10-23 00:36:28 DEBUG AbstractFlushingEventListener:prepareEntityFlushes:132 - Processing flush-time cascades
2017-10-23 00:36:28 DEBUG AbstractFlushingEventListener:prepareCollectionFlushes:174 - Dirty checking collections
2017-10-23 00:36:28 DEBUG AbstractFlushingEventListener:logFlushResults:106 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-10-23 00:36:28 DEBUG AbstractFlushingEventListener:logFlushResults:113 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-10-23 00:36:28 DEBUG EntityPrinter:toString:102 - Listing entities:
2017-10-23 00:36:28 DEBUG EntityPrinter:toString:109 - TestServlet.dao.CommentEntity{IDCustomer=2, commentDate=2017-10-23 00:36:28, id=47, commentLine=
Hello}
2017-10-23 00:36:28 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:28 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:28 INFO  DataBase:addComment:25 - adding comment (DAO layer) -> Success!
2017-10-23 00:36:28 INFO  OrderBean:addComment:29 - adding comment go to DAO layer -> comment was successfully added!
2017-10-23 00:36:28 INFO  OrderBean:getCommentsList:37 - Getting all comments and converting into JSON
2017-10-23 00:36:28 INFO  DataBase:getCommentsList:36 - getting comment list (DAO)!
2017-10-23 00:36:28 WARN  deprecation:createCriteria:1811 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2017-10-23 00:36:28 DEBUG SQL:logStatement:92 - select this_.id as id1_0_0_, this_.customer_id as customer2_0_0_, this_.comment_date as comment_3_0_0_, this_.comment_line as comment_4_0_0_ from customer_comments this_
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 7
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 8
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#46]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 9
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#47]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#46]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#46]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#47]
2017-10-23 00:36:28 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#47]
2017-10-23 00:36:28 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:28 DEBUG SQL:logStatement:92 - select commentent0_.id as id1_0_, commentent0_.customer_id as customer2_0_, commentent0_.comment_date as comment_3_0_, commentent0_.comment_line as comment_4_0_ from customer_comments commentent0_ where commentent0_.customer_id=?
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 7
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 8
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#46]
2017-10-23 00:36:28 DEBUG Loader:debugf:384 - Result set row: 9
2017-10-23 00:36:28 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#47]
2017-10-23 00:36:28 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:28 INFO  DataBase:getCommentsList:45 - getting comment list (DAO)!_> success!
2017-10-23 00:36:28 INFO  OrderBean:getCommentsList:43 - Just last comment
2017-10-23 00:36:35 INFO  OrderBean:getCommentsList:37 - Getting all comments and converting into JSON
2017-10-23 00:36:35 INFO  DataBase:getCommentsList:36 - getting comment list (DAO)!
2017-10-23 00:36:35 WARN  deprecation:createCriteria:1811 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2017-10-23 00:36:35 DEBUG SQL:logStatement:92 - select this_.id as id1_0_0_, this_.customer_id as customer2_0_0_, this_.comment_date as comment_3_0_0_, this_.comment_line as comment_4_0_0_ from customer_comments this_
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 7
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 8
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#46]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 9
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#47]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#46]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#46]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#47]
2017-10-23 00:36:35 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#47]
2017-10-23 00:36:35 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:35 DEBUG SQL:logStatement:92 - select commentent0_.id as id1_0_, commentent0_.customer_id as customer2_0_, commentent0_.comment_date as comment_3_0_, commentent0_.comment_line as comment_4_0_ from customer_comments commentent0_ where commentent0_.customer_id=?
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#1]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#2]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#35]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#36]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#37]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#43]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#44]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 7
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#45]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 8
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#46]
2017-10-23 00:36:35 DEBUG Loader:debugf:384 - Result set row: 9
2017-10-23 00:36:35 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#47]
2017-10-23 00:36:35 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:35 INFO  DataBase:getCommentsList:45 - getting comment list (DAO)!_> success!
2017-10-23 00:36:35 INFO  OrderBean:getCommentsList:54 - All comments going to convert
2017-10-23 00:36:47 DEBUG DriverManagerConnectionProviderImpl:validate:51 - Connection pool now considered primed; min-size will be maintained
2017-10-23 00:36:50 INFO  OrderManager:getOrders:43 - Gettin all orders from DB
2017-10-23 00:36:50 INFO  OrderDAO:getCustomerOrdersByID:37 - Try to get Customer orders by ID  from DB _ > Success!
2017-10-23 00:36:50 INFO  OrderDAO:getCustomerOrdersByID:41 - Try to get Customer orders by ID  from DB
2017-10-23 00:36:50 WARN  deprecation:createCriteria:1811 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2017-10-23 00:36:50 DEBUG SQL:logStatement:92 - select this_.id as id1_1_0_, this_.order_address as order_ad2_1_0_, this_.order_date as order_da3_1_0_, this_.customer_id as customer4_1_0_, this_.customer_name as customer5_1_0_, this_.order_id as order_id6_1_0_, this_.product_id as product_7_1_0_, this_.quantity as quantity8_1_0_ from test_db this_
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#77]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#78]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#79]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#80]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#81]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#82]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#83]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 7
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#84]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 8
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#85]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 9
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#86]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 10
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#88]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 11
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#89]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 12
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#90]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 13
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#91]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 14
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#92]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 15
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#93]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 16
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#94]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 17
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#95]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 18
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#96]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 19
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#97]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 20
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#98]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 21
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#99]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 22
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#100]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 23
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#101]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 24
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#102]
2017-10-23 00:36:50 DEBUG Loader:debugf:384 - Result set row: 25
2017-10-23 00:36:50 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#103]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#77]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#77]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#78]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#78]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#79]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#79]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#80]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#80]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#81]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#81]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#82]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#82]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#83]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#83]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#84]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#84]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#85]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#85]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#86]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#86]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#88]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#88]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#89]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#89]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#90]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#90]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#91]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#91]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#92]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#92]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#93]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#93]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#94]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#94]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#95]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#95]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#96]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#96]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#97]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#97]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#98]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#98]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#99]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#99]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#100]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#100]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#101]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#101]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#102]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#102]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.OrderEntity#103]
2017-10-23 00:36:50 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.OrderEntity#103]
2017-10-23 00:36:50 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:50 DEBUG QueryTranslatorImpl:parse:282 - parse() - HQL: FROM TestServlet.dao.OrderEntity as OE WHERE OE.IDCustomer = :customerID
2017-10-23 00:36:50 DEBUG QueryTranslatorImpl:showHqlAst:300 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[IDENT] Node: 'TestServlet'
    |        |  |  \-[IDENT] Node: 'dao'
    |        |  \-[IDENT] Node: 'OrderEntity'
    |        \-[ALIAS] Node: 'OE'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'OE'
          |  \-[IDENT] Node: 'IDCustomer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'customerID'

2017-10-23 00:36:50 DEBUG ErrorCounter:throwQueryException:95 - throwQueryException() : no errors
2017-10-23 00:36:50 DEBUG HqlSqlBaseWalker:beforeStatement:124 - select << begin [level=1, statement=select]
2017-10-23 00:36:50 DEBUG FromElement:doInitialize:147 - FromClause{level=1} : TestServlet.dao.OrderEntity (OE) -> orderentit0_
2017-10-23 00:36:50 DEBUG FromReferenceNode:setResolved:60 - Resolved : OE -> orderentit0_.id
2017-10-23 00:36:50 DEBUG DotNode:getDataType:666 - getDataType() : IDCustomer -> org.hibernate.type.IntegerType@68366d5b
2017-10-23 00:36:50 DEBUG FromReferenceNode:setResolved:60 - Resolved : OE.IDCustomer -> orderentit0_.customer_id
2017-10-23 00:36:50 DEBUG HqlSqlBaseWalker:beforeStatementCompletion:128 - select : finishing up [level=1, statement=select]
2017-10-23 00:36:50 DEBUG HqlSqlWalker:processQuery:745 - processQuery() :  ( SELECT ( FromClause{level=1} test_db orderentit0_ ) ( WHERE ( = ( orderentit0_.customer_id orderentit0_.id IDCustomer ) ? ) ) )
2017-10-23 00:36:50 DEBUG HqlSqlWalker:createSelectClauseFromFromClause:1021 - Derived SELECT clause created.
2017-10-23 00:36:50 DEBUG JoinProcessor:addJoinNodes:187 - Using FROM fragment [test_db orderentit0_]
2017-10-23 00:36:50 DEBUG HqlSqlBaseWalker:afterStatementCompletion:132 - select >> end [level=1, statement=select]
2017-10-23 00:36:50 DEBUG QueryTranslatorImpl:analyze:269 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_db)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'orderentit0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=OE,role=null,tableName=test_db,tableAlias=orderentit0_,origin=null,columns={,className=TestServlet.dao.OrderEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'orderentit0_.order_address as order_ad2_1_, orderentit0_.order_date as order_da3_1_, orderentit0_.customer_id as customer4_1_, orderentit0_.customer_name as customer5_1_, orderentit0_.order_id as order_id6_1_, orderentit0_.product_id as product_7_1_, orderentit0_.quantity as quantity8_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[OE], fromElementByTableAlias=[orderentit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_db orderentit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=OE,role=null,tableName=test_db,tableAlias=orderentit0_,origin=null,columns={,className=TestServlet.dao.OrderEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'orderentit0_.customer_id' {propertyName=IDCustomer,dereferenceType=PRIMITIVE,getPropertyPath=IDCustomer,path=OE.IDCustomer,tableAlias=orderentit0_,className=TestServlet.dao.OrderEntity,classAlias=OE}
          |  +-[ALIAS_REF] IdentNode: 'orderentit0_.id' {alias=OE, className=TestServlet.dao.OrderEntity, tableAlias=orderentit0_}
          |  \-[IDENT] IdentNode: 'IDCustomer' {originalText=IDCustomer}
          \-[NAMED_PARAM] ParameterNode: '?' {name=customerID, expectedType=org.hibernate.type.IntegerType@68366d5b}

2017-10-23 00:36:50 DEBUG ErrorCounter:throwQueryException:95 - throwQueryException() : no errors
2017-10-23 00:36:50 DEBUG QueryTranslatorImpl:generate:251 - HQL: FROM TestServlet.dao.OrderEntity as OE WHERE OE.IDCustomer = :customerID
2017-10-23 00:36:50 DEBUG QueryTranslatorImpl:generate:252 - SQL: select orderentit0_.id as id1_1_, orderentit0_.order_address as order_ad2_1_, orderentit0_.order_date as order_da3_1_, orderentit0_.customer_id as customer4_1_, orderentit0_.customer_name as customer5_1_, orderentit0_.order_id as order_id6_1_, orderentit0_.product_id as product_7_1_, orderentit0_.quantity as quantity8_1_ from test_db orderentit0_ where orderentit0_.customer_id=?
2017-10-23 00:36:50 DEBUG ErrorCounter:throwQueryException:95 - throwQueryException() : no errors
2017-10-23 00:36:50 DEBUG SQL:logStatement:92 - select orderentit0_.id as id1_1_, orderentit0_.order_address as order_ad2_1_, orderentit0_.order_date as order_da3_1_, orderentit0_.customer_id as customer4_1_, orderentit0_.customer_name as customer5_1_, orderentit0_.order_id as order_id6_1_, orderentit0_.product_id as product_7_1_, orderentit0_.quantity as quantity8_1_ from test_db orderentit0_ where orderentit0_.customer_id=?
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#77]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#78]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#79]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#80]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#81]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#82]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#86]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 7
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#88]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 8
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#89]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 9
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#90]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 10
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#91]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 11
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#92]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 12
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#93]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 13
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#94]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 14
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#95]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 15
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#96]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 16
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#97]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 17
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#98]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 18
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#99]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 19
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#100]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 20
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#101]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 21
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#102]
2017-10-23 00:36:51 DEBUG Loader:debugf:384 - Result set row: 22
2017-10-23 00:36:51 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.OrderEntity#103]
2017-10-23 00:36:51 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:36:51 INFO  OrderDAO:getCustomerOrdersByID:47 - Try to get Customer orders by ID  from DB _ > Success!
2017-10-23 00:36:51 INFO  OrderManager:getOrders:45 - Gettin all orders from DB -> Success!
2017-10-23 00:36:51 INFO  OrderManager:getOrders:56 - list with  ItemQuantityDate ready to return to servlet
2017-10-23 00:36:59 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:37:02 INFO  OrderBean:getCommentsList:37 - Getting all comments and converting into JSON
2017-10-23 00:37:02 INFO  DataBase:getCommentsList:36 - getting comment list (DAO)!
2017-10-23 00:37:02 WARN  deprecation:createCriteria:1811 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2017-10-23 00:37:02 DEBUG SQL:logStatement:92 - select this_.id as id1_0_0_, this_.customer_id as customer2_0_0_, this_.comment_date as comment_3_0_0_, this_.comment_line as comment_4_0_0_ from customer_comments this_
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#1]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#2]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#35]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#36]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#37]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#43]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#44]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 7
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#45]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 8
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#46]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 9
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#47]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#1]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#1]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#2]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#2]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#35]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#35]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#36]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#36]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#37]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#37]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#43]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#43]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#44]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#44]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#45]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#45]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#46]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#46]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:141 - Resolving associations for [TestServlet.dao.CommentEntity#47]
2017-10-23 00:37:02 DEBUG TwoPhaseLoad:doInitializeEntity:281 - Done materializing entity [TestServlet.dao.CommentEntity#47]
2017-10-23 00:37:02 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:37:02 DEBUG SQL:logStatement:92 - select commentent0_.id as id1_0_, commentent0_.customer_id as customer2_0_, commentent0_.comment_date as comment_3_0_, commentent0_.comment_line as comment_4_0_ from customer_comments commentent0_ where commentent0_.customer_id=?
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 0
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#1]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 1
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#2]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 2
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#35]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 3
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#36]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 4
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#37]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 5
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#43]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 6
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#44]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 7
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#45]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 8
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#46]
2017-10-23 00:37:02 DEBUG Loader:debugf:384 - Result set row: 9
2017-10-23 00:37:02 DEBUG Loader:getRow:1527 - Result row: EntityKey[TestServlet.dao.CommentEntity#47]
2017-10-23 00:37:02 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:37:02 INFO  DataBase:getCommentsList:45 - getting comment list (DAO)!_> success!
2017-10-23 00:37:02 INFO  OrderBean:getCommentsList:54 - All comments going to convert
2017-10-23 00:37:26 INFO  OrderManager:addOrder:16 - adding customers Order to SQL DB
2017-10-23 00:37:26 INFO  OrderManager:addOrder:32 - Sending OrderEntity to DAO layer
2017-10-23 00:37:26 INFO  OrderDAO:addData:18 - Adding OrderEntity to DB
2017-10-23 00:37:26 INFO  OrderDAO:addData:21 - Try to add OrderEntity to DB
2017-10-23 00:37:26 DEBUG TransactionImpl:begin:55 - begin
2017-10-23 00:37:26 DEBUG ActionQueue:addResolvedEntityInsertAction:279 - Executing identity-insert immediately
2017-10-23 00:37:26 DEBUG SQL:logStatement:92 - insert into test_db (order_address, order_date, customer_id, customer_name, order_id, product_id, quantity) values (?, ?, ?, ?, ?, ?, ?)
2017-10-23 00:37:26 DEBUG IdentifierGeneratorHelper:getGeneratedIdentity:78 - Natively generated identity: 104
2017-10-23 00:37:26 DEBUG ResourceRegistryStandardImpl:release:104 - HHH000387: ResultSet's statement was not registered
2017-10-23 00:37:26 DEBUG TransactionImpl:commit:66 - committing
2017-10-23 00:37:26 DEBUG AbstractFlushingEventListener:prepareEntityFlushes:132 - Processing flush-time cascades
2017-10-23 00:37:26 DEBUG AbstractFlushingEventListener:prepareCollectionFlushes:174 - Dirty checking collections
2017-10-23 00:37:26 DEBUG AbstractFlushingEventListener:logFlushResults:106 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-10-23 00:37:26 DEBUG AbstractFlushingEventListener:logFlushResults:113 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-10-23 00:37:26 DEBUG EntityPrinter:toString:102 - Listing entities:
2017-10-23 00:37:26 DEBUG EntityPrinter:toString:109 - TestServlet.dao.OrderEntity{quantityOfOrderedProduct=3, IDCustomer=2, productID=0, orderID=186e714a-c3c7-45a6-a1e1-41a11ccf341a, AddressCustomer=??????, DateTimeOfOrder=2017-10-23 00:37:26, id=104, customerName=?????}
2017-10-23 00:37:26 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:37:26 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:37:26 INFO  OrderDAO:addData:26 - Try to add OrderEntity to DB _ > Success!
2017-10-23 00:37:26 INFO  OrderManager:addOrder:34 - Order was added to DB!
2017-10-23 00:37:26 INFO  OrderManager:addOrder:32 - Sending OrderEntity to DAO layer
2017-10-23 00:37:26 INFO  OrderDAO:addData:18 - Adding OrderEntity to DB
2017-10-23 00:37:26 INFO  OrderDAO:addData:21 - Try to add OrderEntity to DB
2017-10-23 00:37:26 DEBUG TransactionImpl:begin:55 - begin
2017-10-23 00:37:26 DEBUG ActionQueue:addResolvedEntityInsertAction:279 - Executing identity-insert immediately
2017-10-23 00:37:26 DEBUG SQL:logStatement:92 - insert into test_db (order_address, order_date, customer_id, customer_name, order_id, product_id, quantity) values (?, ?, ?, ?, ?, ?, ?)
2017-10-23 00:37:26 DEBUG IdentifierGeneratorHelper:getGeneratedIdentity:78 - Natively generated identity: 105
2017-10-23 00:37:26 DEBUG ResourceRegistryStandardImpl:release:104 - HHH000387: ResultSet's statement was not registered
2017-10-23 00:37:26 DEBUG TransactionImpl:commit:66 - committing
2017-10-23 00:37:26 DEBUG AbstractFlushingEventListener:prepareEntityFlushes:132 - Processing flush-time cascades
2017-10-23 00:37:26 DEBUG AbstractFlushingEventListener:prepareCollectionFlushes:174 - Dirty checking collections
2017-10-23 00:37:26 DEBUG AbstractFlushingEventListener:logFlushResults:106 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-10-23 00:37:26 DEBUG AbstractFlushingEventListener:logFlushResults:113 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-10-23 00:37:26 DEBUG EntityPrinter:toString:102 - Listing entities:
2017-10-23 00:37:26 DEBUG EntityPrinter:toString:109 - TestServlet.dao.OrderEntity{quantityOfOrderedProduct=2, IDCustomer=2, productID=1, orderID=186e714a-c3c7-45a6-a1e1-41a11ccf341a, AddressCustomer=??????, DateTimeOfOrder=2017-10-23 00:37:26, id=105, customerName=?????}
2017-10-23 00:37:26 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:37:26 DEBUG LogicalConnectionManagedImpl:afterTransaction:170 - Initiating JDBC connection release from afterTransaction
2017-10-23 00:37:26 INFO  OrderDAO:addData:26 - Try to add OrderEntity to DB _ > Success!
2017-10-23 00:37:26 INFO  OrderManager:addOrder:34 - Order was added to DB!
2017-10-23 00:37:36 INFO  DataBase:getProductsBase:28 - get all products from DB
2017-10-23 00:37:37 INFO  DataBase:getProductsBase:28 - get all products from DB
